!function(){function e(t,n){if(!(this instanceof e))return new e(t,n);if(!t||"TABLE"!==t.tagName)throw new Error("Element must be a table");this.init(t,n||{})}var t=[],n=function(e){var t;return window.CustomEvent&&"function"==typeof window.CustomEvent?t=new CustomEvent(e):(t=document.createEvent("CustomEvent")).initCustomEvent(e,!1,!1,void 0),t},o=function(e){return e.getAttribute("data-sort")||e.textContent||e.innerText||""},a=function(e,t){return(e=e.trim().toLowerCase())===(t=t.trim().toLowerCase())?0:e<t?1:-1},d=function(e,t){return function(n,o){var a=e(n.td,o.td);return 0===a?t?o.index-n.index:n.index-o.index:a}};e.extend=function(e,n,o){if("function"!=typeof n||"function"!=typeof o)throw new Error("Pattern and sort must be a function");t.push({name:e,pattern:n,sort:o})},e.prototype={init:function(e,t){var n,o,a,d,r=this;if(r.table=e,r.thead=!1,r.options=t,e.rows&&e.rows.length>0)if(e.tHead&&e.tHead.rows.length>0){for(a=0;a<e.tHead.rows.length;a++)if("thead"===e.tHead.rows[a].getAttribute("data-sort-method")){n=e.tHead.rows[a];break}n||(n=e.tHead.rows[e.tHead.rows.length-1]),r.thead=!0}else n=e.rows[0];if(n){var i=function(){r.current&&r.current!==this&&r.current.removeAttribute("aria-sort"),r.current=this,r.sortTable(this)};for(a=0;a<n.cells.length;a++)(d=n.cells[a]).setAttribute("role","columnheader"),"none"!==d.getAttribute("data-sort-method")&&(d.tabindex=0,d.addEventListener("click",i,!1),null!==d.getAttribute("data-sort-default")&&(o=d));o&&(r.current=o,r.sortTable(o))}},sortTable:function(e,r){var i=this,s=e.cellIndex,c=a,l="",u=[],p=i.thead?0:1,m=e.getAttribute("data-sort-method"),h=e.getAttribute("aria-sort");if(i.table.dispatchEvent(n("beforeSort")),r||(h="ascending"===h?"descending":"descending"===h?"ascending":i.options.descending?"descending":"ascending",e.setAttribute("aria-sort",h)),!(i.table.rows.length<2)){if(!m){for(;u.length<3&&p<i.table.tBodies[0].rows.length;)(l=(l=o(i.table.tBodies[0].rows[p].cells[s])).trim()).length>0&&u.push(l),p++;if(!u)return}for(p=0;p<t.length;p++)if(l=t[p],m){if(l.name===m){c=l.sort;break}}else if(u.every(l.pattern)){c=l.sort;break}for(i.col=s,p=0;p<i.table.tBodies.length;p++){var f,g=[],v={},y=0,E=0;if(!(i.table.tBodies[p].rows.length<2)){for(f=0;f<i.table.tBodies[p].rows.length;f++)"none"===(l=i.table.tBodies[p].rows[f]).getAttribute("data-sort-method")?v[y]=l:g.push({tr:l,td:o(l.cells[i.col]),index:y}),y++;for("descending"===h?g.sort(d(c,!0)):(g.sort(d(c,!1)),g.reverse()),f=0;f<y;f++)v[f]?(l=v[f],E++):l=g[f-E].tr,i.table.tBodies[p].appendChild(l)}}i.table.dispatchEvent(n("afterSort"))}},refresh:function(){void 0!==this.current&&this.sortTable(this.current,!0)}},"undefined"!=typeof module&&module.exports?module.exports=e:window.Tablesort=e}(),function(){var e=function(e){return e.replace(/[^\-?0-9.]/g,"")};Tablesort.extend("number",function(e){return e.match(/^[-+]?[£\x24Û¢´€]?\d+\s*([,\.]\d{0,2})/)||e.match(/^[-+]?\d+\s*([,\.]\d{0,2})?[£\x24Û¢´€]/)||e.match(/^[-+]?(\d)*-?([,\.]){0,1}-?(\d)+([E,e][\-+][\d]+)?%?$/)},function(t,n){return t=e(t),function(e,t){return e=parseFloat(e),t=parseFloat(t),(e=isNaN(e)?0:e)-(t=isNaN(t)?0:t)}(n=e(n),t)})}();const profile=document.querySelector(".profile");let userId=null,year=null;function getUserId(){const e=document.querySelector(".current h1");null!==e&&(userId=e.dataset.id)}function getYear(){const e=document.querySelector(".yearHeader");null!==e&&(year=e.dataset.year)}function updateProfile(e){if(console.log(e),removeSpinnerIfPresent(),null!==e.logs||0!==e.events.length)null!==e.logs&&printLogs(e.logs),0!==e.events.length&&printEvents(e.events);else{const e=createNotification();profile.appendChild(e)}}function printLogs(e){const t=document.createElement("section");t.classList.add("table");const n=document.createElement("table"),o=document.createElement("thead"),a=document.createElement("tr"),d=document.createElement("th");d.classList.add("icon");const r=document.createElement("th");r.appendChild(document.createTextNode("Level")),r.classList.add("level");const i=document.createElement("th");i.appendChild(document.createTextNode("Experience"));const s=document.createElement("th");s.appendChild(document.createTextNode("Difference"));const c=document.createElement("tbody");profile.appendChild(t),t.appendChild(n),n.appendChild(o),a.appendChild(d),a.appendChild(r),a.appendChild(i),a.appendChild(s),o.appendChild(a),n.appendChild(c),e.forEach(function(e,t){const n=document.createElement("tr"),o=document.createElement("td"),a=document.createElement("span");a.classList.add("log-icon","s"+t),o.appendChild(a);const d=document.createElement("td");d.appendChild(document.createTextNode(e.level));const r=document.createElement("td");r.appendChild(document.createTextNode(Math.round(e.value).toLocaleString()));const i=document.createElement("td");e.difference>0?(i.appendChild(document.createTextNode("+"+Math.round(e.difference).toLocaleString())),i.classList.add("log-value","positive")):i.appendChild(document.createTextNode("0")),n.appendChild(o),n.appendChild(d),n.appendChild(r),n.appendChild(i),c.appendChild(n)})}function printEvents(e){const t=document.createElement("section");t.classList.add("events");const n=document.createElement("ul");n.classList.add("events"),profile.appendChild(t),t.appendChild(n),e.forEach(function(e,t){const o=document.createElement("li");o.classList.add("event-item");const a=document.createElement("div");a.classList.add("event-header");const d=document.createElement("h2");d.appendChild(document.createTextNode(e.title)),d.classList.add("event-title");const r=document.createElement("span");r.appendChild(document.createTextNode(dayjs.unix(e.timestamp).format("MMMM D, YYYY HH:mm"))),r.classList.add("event-timestamp");const i=document.createElement("p");i.appendChild(document.createTextNode(e.details)),i.classList.add("event-details"),o.appendChild(a),a.appendChild(d),a.appendChild(r),o.appendChild(i),n.appendChild(o)})}function createNotification(){const e=document.createElement("div");e.classList.add("text","notification","inf");const t=document.createElement("h2");t.appendChild(document.createTextNode("Nothing interesting happened."));const n=document.createElement("p");return n.appendChild(document.createTextNode("Looks like we don't have any data for you on this day.")),e.appendChild(t),e.appendChild(n),e}const body=document.querySelector("body");let isNightmode=body.classList.contains("is-nightmode");const nightmodeToggle=document.querySelector(".night-mode-toggle");function toggleNightmodeOnClick(e){e.preventDefault(),isNightmode=!(isNightmode=body.classList.contains("is-nightmode")),body.classList.toggle("is-nightmode"),localStorage.setItem("nightmode",JSON.stringify(isNightmode))}function turnOnNightmodeOnPageLoad(){"true"===localStorage.getItem("nightmode")&&body.classList.toggle("is-nightmode")}let startDay,endDay;null!==nightmodeToggle&&nightmodeToggle.addEventListener("click",toggleNightmodeOnClick);let dragged=!1;const gridSquares=document.querySelectorAll(".day");function gridStartHandler(e){startDay=e.target.dataset.index,document.querySelectorAll(".today").forEach(function(e,t){e.classList.toggle("today")}),document.querySelectorAll(".select").forEach(function(e,t){e.classList.toggle("select")}),e.target.classList.toggle("today"),dragged=!0}function gridEndHandler(e){e.preventDefault(),endDay=e.target.dataset.index,dragged=!1,startDay>endDay?load(endDay,startDay):load(startDay,endDay)}function gridHoverHandler(e){dragged&&gridSquares.forEach(function(t,n){t.classList.remove("select"),parseInt(startDay)>parseInt(e.target.dataset.index)?parseInt(t.dataset.index)<=parseInt(startDay)&&parseInt(t.dataset.index)>=parseInt(e.target.dataset.index)&&t.classList.add("select"):parseInt(t.dataset.index)>=parseInt(startDay)&&parseInt(t.dataset.index)<=parseInt(e.target.dataset.index)&&t.classList.add("select")})}function removeSpinnerIfPresent(){const e=document.querySelector(".spinner");null!==e&&e.remove()}function removeNotificationIfPresent(){const e=document.querySelector(".notification");null!==e&&e.remove()}function load(e,t){const n={userId:userId,year:year,startDay:e,endDay:t};profile.innerHTML="",removeNotificationIfPresent(),removeSpinnerIfPresent();const o=document.createElement("span");o.classList.add("spinner"),profile.appendChild(o);const a=new XMLHttpRequest;a.open("POST","/api/getData",!0),a.setRequestHeader("Content-Type","application/json; charset=UTF-8"),a.send(JSON.stringify(n)),a.onreadystatechange=function(){4===a.readyState&&200===a.status&&(updateProfile(JSON.parse(a.responseText)),sortProfileTable())}}function sortProfileTable(){const e=document.querySelector(".table table");null!==e&&new Tablesort(e,{descending:!0})}gridSquares.length>0&&gridSquares.forEach(function(e,t){["mousedown","touchstart"].forEach(function(t){e.addEventListener(t,gridStartHandler)}),["mouseup","touchend"].forEach(function(t){e.addEventListener(t,gridEndHandler)}),["mouseenter","touchenter"].forEach(function(t){e.addEventListener(t,gridHoverHandler)})}),getUserId(),getYear(),turnOnNightmodeOnPageLoad(),sortProfileTable();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhYmxlc29ydC5taW4uanMiLCJzY3JpcHQuanMiXSwibmFtZXMiOlsiYSIsImIiLCJjIiwidGhpcyIsInRhZ05hbWUiLCJFcnJvciIsImluaXQiLCJ3aW5kb3ciLCJDdXN0b21FdmVudCIsImRvY3VtZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0Q3VzdG9tRXZlbnQiLCJkIiwiZ2V0QXR0cmlidXRlIiwidGV4dENvbnRlbnQiLCJpbm5lclRleHQiLCJlIiwidHJpbSIsInRvTG93ZXJDYXNlIiwiZiIsInRkIiwiaW5kZXgiLCJleHRlbmQiLCJwdXNoIiwibmFtZSIsInBhdHRlcm4iLCJzb3J0IiwicHJvdG90eXBlIiwiZyIsInRhYmxlIiwidGhlYWQiLCJvcHRpb25zIiwicm93cyIsImxlbmd0aCIsInRIZWFkIiwiaCIsImN1cnJlbnQiLCJyZW1vdmVBdHRyaWJ1dGUiLCJzb3J0VGFibGUiLCJjZWxscyIsInNldEF0dHJpYnV0ZSIsInRhYmluZGV4IiwiYWRkRXZlbnRMaXN0ZW5lciIsImkiLCJjZWxsSW5kZXgiLCJqIiwiayIsImwiLCJtIiwibiIsIm8iLCJkaXNwYXRjaEV2ZW50IiwiZGVzY2VuZGluZyIsInRCb2RpZXMiLCJldmVyeSIsImNvbCIsInAiLCJxIiwiciIsInMiLCJ0IiwidHIiLCJyZXZlcnNlIiwiYXBwZW5kQ2hpbGQiLCJyZWZyZXNoIiwibW9kdWxlIiwiZXhwb3J0cyIsIlRhYmxlc29ydCIsImNsZWFuTnVtYmVyIiwicmVwbGFjZSIsIml0ZW0iLCJtYXRjaCIsInBhcnNlRmxvYXQiLCJpc05hTiIsImNvbXBhcmVOdW1iZXIiLCJwcm9maWxlIiwicXVlcnlTZWxlY3RvciIsInVzZXJJZCIsInllYXIiLCJnZXRVc2VySWQiLCJ1c2VySGVhZGVyIiwiZGF0YXNldCIsImlkIiwiZ2V0WWVhciIsInllYXJIZWFkZXIiLCJ1cGRhdGVQcm9maWxlIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJyZW1vdmVTcGlubmVySWZQcmVzZW50IiwibG9ncyIsImV2ZW50cyIsInByaW50TG9ncyIsInByaW50RXZlbnRzIiwibm90aWZpY2F0aW9uIiwiY3JlYXRlTm90aWZpY2F0aW9uIiwibG9nU2VjdGlvbiIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc0xpc3QiLCJhZGQiLCJsb2dUYWJsZSIsImxvZ0hlYWRlciIsImxvZ0hlYWRlclJvdyIsImxvZ0hlYWRlckljb24iLCJsb2dIZWFkZXJMZXZlbCIsImNyZWF0ZVRleHROb2RlIiwibG9nSGVhZGVyRXhwZXJpZW5jZSIsImxvZ0hlYWRlckRpZmZlcmVuY2UiLCJsb2dUYWJsZUJvZHkiLCJmb3JFYWNoIiwibG9nUm93IiwibG9nSWNvbkNlbGwiLCJsb2dJY29uIiwibG9nTGV2ZWwiLCJsZXZlbCIsImxvZ1ZhbHVlIiwiTWF0aCIsInJvdW5kIiwidmFsdWUiLCJ0b0xvY2FsZVN0cmluZyIsImxvZ0RpZmZlcmVuY2UiLCJkaWZmZXJlbmNlIiwiZXZlbnRTZWN0aW9uIiwiZXZlbnRMaXN0IiwiZXZlbnQiLCJldmVudEl0ZW0iLCJldmVudEhlYWRlciIsImV2ZW50VGl0bGUiLCJ0aXRsZSIsImV2ZW50VGltZXN0YW1wIiwiZGF5anMiLCJ1bml4IiwidGltZXN0YW1wIiwiZm9ybWF0IiwiZXZlbnREZXRhaWxzIiwiZGV0YWlscyIsIm5vdGlmaWNhdGlvblRpdGxlIiwibm90aWZpY2F0aW9uVGV4dCIsImJvZHkiLCJpc05pZ2h0bW9kZSIsImNvbnRhaW5zIiwibmlnaHRtb2RlVG9nZ2xlIiwidG9nZ2xlTmlnaHRtb2RlT25DbGljayIsInByZXZlbnREZWZhdWx0IiwidG9nZ2xlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0dXJuT25OaWdodG1vZGVPblBhZ2VMb2FkIiwiZ2V0SXRlbSIsInN0YXJ0RGF5IiwiZW5kRGF5IiwiZHJhZ2dlZCIsImdyaWRTcXVhcmVzIiwicXVlcnlTZWxlY3RvckFsbCIsImdyaWRTdGFydEhhbmRsZXIiLCJ0YXJnZXQiLCJzcXVhcmUiLCJncmlkRW5kSGFuZGxlciIsImxvYWQiLCJncmlkSG92ZXJIYW5kbGVyIiwicmVtb3ZlIiwicGFyc2VJbnQiLCJzcGlubmVyIiwicmVtb3ZlTm90aWZpY2F0aW9uSWZQcmVzZW50IiwiaW5uZXJIVE1MIiwibmV3U3Bpbm5lciIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib3BlbiIsInNldFJlcXVlc3RIZWFkZXIiLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInBhcnNlIiwicmVzcG9uc2VUZXh0Iiwic29ydFByb2ZpbGVUYWJsZSIsInByb2ZpbGVUYWJsZSJdLCJtYXBwaW5ncyI6IkNBSUcsV0FBVyxTQUFTQSxFQUFFQyxFQUFFQyxHQUFHLEtBQUtDLGdCQUFnQkgsR0FBRyxPQUFPLElBQUlBLEVBQUVDLEVBQUVDLEdBQUcsSUFBSUQsR0FBRyxVQUFVQSxFQUFFRyxRQUFRLE1BQU0sSUFBSUMsTUFBTSwyQkFBMkJGLEtBQUtHLEtBQUtMLEVBQUVDLEdBQUcsSUFBSSxJQUFJRCxFQUFFLEdBQUdDLEVBQUUsU0FBU0YsR0FBRyxJQUFJQyxFQUFFLE9BQU9NLE9BQU9DLGFBQWEsbUJBQW1CRCxPQUFPQyxZQUFZUCxFQUFFLElBQUlPLFlBQVlSLElBQUlDLEVBQUVRLFNBQVNDLFlBQVksZ0JBQWlCQyxnQkFBZ0JYLEdBQUUsR0FBRyxPQUFHLEdBQVNDLEdBQUdXLEVBQUUsU0FBU1osR0FBRyxPQUFPQSxFQUFFYSxhQUFhLGNBQWNiLEVBQUVjLGFBQWFkLEVBQUVlLFdBQVcsSUFBSUMsRUFBRSxTQUFTaEIsRUFBRUMsR0FBRyxPQUFPRCxFQUFFQSxFQUFFaUIsT0FBT0Msa0JBQWNqQixFQUFFQSxFQUFFZ0IsT0FBT0MsZUFBb0IsRUFBRWxCLEVBQUVDLEVBQUUsR0FBRyxHQUFHa0IsRUFBRSxTQUFTbkIsRUFBRUMsR0FBRyxPQUFPLFNBQVNDLEVBQUVVLEdBQUcsSUFBSUksRUFBRWhCLEVBQUVFLEVBQUVrQixHQUFHUixFQUFFUSxJQUFJLE9BQU8sSUFBSUosRUFBRWYsRUFBRVcsRUFBRVMsTUFBTW5CLEVBQUVtQixNQUFNbkIsRUFBRW1CLE1BQU1ULEVBQUVTLE1BQU1MLElBQUloQixFQUFFc0IsT0FBTyxTQUFTdEIsRUFBRUUsRUFBRVUsR0FBRyxHQUFHLG1CQUFtQlYsR0FBRyxtQkFBbUJVLEVBQUUsTUFBTSxJQUFJUCxNQUFNLHVDQUF1Q0osRUFBRXNCLEtBQUssQ0FBQ0MsS0FBS3hCLEVBQUV5QixRQUFRdkIsRUFBRXdCLEtBQUtkLEtBQUtaLEVBQUUyQixVQUFVLENBQUNyQixLQUFLLFNBQVNOLEVBQUVDLEdBQUcsSUFBSUMsRUFBRVUsRUFBRUksRUFBRUcsRUFBRVMsRUFBRXpCLEtBQUssR0FBR3lCLEVBQUVDLE1BQU03QixFQUFFNEIsRUFBRUUsT0FBTSxFQUFHRixFQUFFRyxRQUFROUIsRUFBRUQsRUFBRWdDLE1BQU1oQyxFQUFFZ0MsS0FBS0MsT0FBTyxFQUFFLEdBQUdqQyxFQUFFa0MsT0FBT2xDLEVBQUVrQyxNQUFNRixLQUFLQyxPQUFPLEVBQUUsQ0FBQyxJQUFJakIsRUFBRSxFQUFFQSxFQUFFaEIsRUFBRWtDLE1BQU1GLEtBQUtDLE9BQU9qQixJQUFJLEdBQUcsVUFBVWhCLEVBQUVrQyxNQUFNRixLQUFLaEIsR0FBR0gsYUFBYSxvQkFBb0IsQ0FBQ1gsRUFBRUYsRUFBRWtDLE1BQU1GLEtBQUtoQixHQUFHLE1BQU1kLElBQUlBLEVBQUVGLEVBQUVrQyxNQUFNRixLQUFLaEMsRUFBRWtDLE1BQU1GLEtBQUtDLE9BQU8sSUFBSUwsRUFBRUUsT0FBTSxPQUFRNUIsRUFBRUYsRUFBRWdDLEtBQUssR0FBRyxHQUFHOUIsRUFBRSxDQUFDLElBQUlpQyxFQUFFLFdBQVdQLEVBQUVRLFNBQVNSLEVBQUVRLFVBQVVqQyxNQUFNeUIsRUFBRVEsUUFBUUMsZ0JBQWdCLGFBQWFULEVBQUVRLFFBQVFqQyxLQUFLeUIsRUFBRVUsVUFBVW5DLE9BQU8sSUFBSWEsRUFBRSxFQUFFQSxFQUFFZCxFQUFFcUMsTUFBTU4sT0FBT2pCLEtBQUlHLEVBQUVqQixFQUFFcUMsTUFBTXZCLElBQUt3QixhQUFhLE9BQU8sZ0JBQWdCLFNBQVNyQixFQUFFTixhQUFhLHNCQUFzQk0sRUFBRXNCLFNBQVMsRUFBRXRCLEVBQUV1QixpQkFBaUIsUUFBUVAsR0FBRSxHQUFJLE9BQU9oQixFQUFFTixhQUFhLHVCQUF1QkQsRUFBRU8sSUFBSVAsSUFBSWdCLEVBQUVRLFFBQVF4QixFQUFFZ0IsRUFBRVUsVUFBVTFCLE1BQU0wQixVQUFVLFNBQVN0QyxFQUFFNEIsR0FBRyxJQUFJTyxFQUFFaEMsS0FBS3dDLEVBQUUzQyxFQUFFNEMsVUFBVUMsRUFBRTdCLEVBQUU4QixFQUFFLEdBQUdDLEVBQUUsR0FBR0MsRUFBRWIsRUFBRUwsTUFBTSxFQUFFLEVBQUVtQixFQUFFakQsRUFBRWEsYUFBYSxvQkFBb0JxQyxFQUFFbEQsRUFBRWEsYUFBYSxhQUFhLEdBQUdzQixFQUFFTixNQUFNc0IsY0FBY2pELEVBQUUsZUFBZTBCLElBQUlzQixFQUFFLGNBQWNBLEVBQUUsYUFBYSxlQUFlQSxFQUFFLFlBQVlmLEVBQUVKLFFBQVFxQixXQUFXLGFBQWEsWUFBWXBELEVBQUV3QyxhQUFhLFlBQVlVLE1BQU1mLEVBQUVOLE1BQU1HLEtBQUtDLE9BQU8sR0FBRyxDQUFDLElBQUlnQixFQUFFLENBQUMsS0FBS0YsRUFBRWQsT0FBTyxHQUFHZSxFQUFFYixFQUFFTixNQUFNd0IsUUFBUSxHQUFHckIsS0FBS0MsU0FBaURhLEdBQXpDQSxFQUFFbEMsRUFBRXVCLEVBQUVOLE1BQU13QixRQUFRLEdBQUdyQixLQUFLZ0IsR0FBR1QsTUFBTUksS0FBUTFCLFFBQVNnQixPQUFPLEdBQUdjLEVBQUV4QixLQUFLdUIsR0FBR0UsSUFBSSxJQUFJRCxFQUFFLE9BQU8sSUFBSUMsRUFBRSxFQUFFQSxFQUFFL0MsRUFBRWdDLE9BQU9lLElBQUksR0FBR0YsRUFBRTdDLEVBQUUrQyxHQUFHQyxHQUFHLEdBQUdILEVBQUV0QixPQUFPeUIsRUFBRSxDQUFDSixFQUFFQyxFQUFFcEIsS0FBSyxZQUFZLEdBQUdxQixFQUFFTyxNQUFNUixFQUFFckIsU0FBUyxDQUFDb0IsRUFBRUMsRUFBRXBCLEtBQUssTUFBTSxJQUFJUyxFQUFFb0IsSUFBSVosRUFBRUssRUFBRSxFQUFFQSxFQUFFYixFQUFFTixNQUFNd0IsUUFBUXBCLE9BQU9lLElBQUksQ0FBQyxJQUFJUSxFQUFFQyxFQUFFLEdBQUdDLEVBQUUsR0FBR0MsRUFBRSxFQUFFQyxFQUFFLEVBQUUsS0FBS3pCLEVBQUVOLE1BQU13QixRQUFRTCxHQUFHaEIsS0FBS0MsT0FBTyxHQUFHLENBQUMsSUFBSXVCLEVBQUUsRUFBRUEsRUFBRXJCLEVBQUVOLE1BQU13QixRQUFRTCxHQUFHaEIsS0FBS0MsT0FBT3VCLElBQWlDLFVBQTdCVixFQUFFWCxFQUFFTixNQUFNd0IsUUFBUUwsR0FBR2hCLEtBQUt3QixJQUFjM0MsYUFBYSxvQkFBb0I2QyxFQUFFQyxHQUFHYixFQUFFVyxFQUFFbEMsS0FBSyxDQUFDc0MsR0FBR2YsRUFBRTFCLEdBQUdSLEVBQUVrQyxFQUFFUCxNQUFNSixFQUFFb0IsTUFBTWxDLE1BQU1zQyxJQUFJQSxJQUFJLElBQUksZUFBZVQsRUFBRU8sRUFBRS9CLEtBQUtQLEVBQUUwQixHQUFFLEtBQU1ZLEVBQUUvQixLQUFLUCxFQUFFMEIsR0FBRSxJQUFLWSxFQUFFSyxXQUFXTixFQUFFLEVBQUVBLEVBQUVHLEVBQUVILElBQUlFLEVBQUVGLElBQUlWLEVBQUVZLEVBQUVGLEdBQUdJLEtBQUtkLEVBQUVXLEVBQUVELEVBQUVJLEdBQUdDLEdBQUcxQixFQUFFTixNQUFNd0IsUUFBUUwsR0FBR2UsWUFBWWpCLElBQUlYLEVBQUVOLE1BQU1zQixjQUFjakQsRUFBRSxnQkFBZ0I4RCxRQUFRLGdCQUFXLElBQVM3RCxLQUFLaUMsU0FBU2pDLEtBQUttQyxVQUFVbkMsS0FBS2lDLFNBQVEsS0FBTSxvQkFBb0I2QixRQUFRQSxPQUFPQyxRQUFRRCxPQUFPQyxRQUFRbEUsRUFBRU8sT0FBTzRELFVBQVVuRSxFQUF2ckYsR0FFRixXQUNHLElBQUlvRSxFQUFjLFNBQVN6QixHQUNuQixPQUFPQSxFQUFFMEIsUUFBUSxjQUFlLEtBYXhDRixVQUFVN0MsT0FBTyxTQUFVLFNBQVNnRCxHQUNoQyxPQUFPQSxFQUFLQyxNQUFNLDJDQUNkRCxFQUFLQyxNQUFNLDJDQUNYRCxFQUFLQyxNQUFNLDBEQUNoQixTQUFTdkUsRUFBR0MsR0FJWCxPQUhBRCxFQUFJb0UsRUFBWXBFLEdBZkEsU0FBU0EsRUFBR0MsR0FPeEIsT0FOQUQsRUFBSXdFLFdBQVd4RSxHQUNmQyxFQUFJdUUsV0FBV3ZFLElBRWZELEVBQUl5RSxNQUFNekUsR0FBSyxFQUFJQSxJQUNuQkMsRUFBSXdFLE1BQU14RSxHQUFLLEVBQUlBLEdBYWhCeUUsQ0FGUHpFLEVBQUltRSxFQUFZbkUsR0FFUUQsS0F2QmhDLEdBc0NBLE1BQU0yRSxRQUFVbEUsU0FBU21FLGNBQWMsWUFDdkMsSUFBSUMsT0FBUyxLQUNUQyxLQUFPLEtBRVgsU0FBU0MsWUFDTCxNQUFNQyxFQUFhdkUsU0FBU21FLGNBQWMsZUFDdkIsT0FBZkksSUFDQUgsT0FBU0csRUFBV0MsUUFBUUMsSUFJcEMsU0FBU0MsVUFDTCxNQUFNQyxFQUFhM0UsU0FBU21FLGNBQWMsZUFDdkIsT0FBZlEsSUFDQU4sS0FBT00sRUFBV0gsUUFBUUgsTUFJbEMsU0FBU08sY0FBY0MsR0FLbkIsR0FIQUMsUUFBUUMsSUFBSUYsR0FDWkcseUJBRW1CLE9BQWZILEVBQUtJLE1BQTBDLElBQXhCSixFQUFLSyxPQUFPMUQsT0FNcEIsT0FBZnFELEVBQUtJLE1BQ0xFLFVBQVVOLEVBQUtJLE1BR1MsSUFBeEJKLEVBQUtLLE9BQU8xRCxRQUNaNEQsWUFBWVAsRUFBS0ssWUFYckIsQ0FDSSxNQUFNRyxFQUFlQyxxQkFDckJwQixRQUFRWixZQUFZK0IsSUFhNUIsU0FBU0YsVUFBVUYsR0FHZixNQUFNTSxFQUFhdkYsU0FBU3dGLGNBQWMsV0FDMUNELEVBQVdFLFVBQVVDLElBQUksU0FFekIsTUFBTUMsRUFBVzNGLFNBQVN3RixjQUFjLFNBQ2xDSSxFQUFZNUYsU0FBU3dGLGNBQWMsU0FFbkNLLEVBQWU3RixTQUFTd0YsY0FBYyxNQUV0Q00sRUFBZ0I5RixTQUFTd0YsY0FBYyxNQUM3Q00sRUFBY0wsVUFBVUMsSUFBSSxRQUU1QixNQUFNSyxFQUFpQi9GLFNBQVN3RixjQUFjLE1BQzlDTyxFQUFlekMsWUFBWXRELFNBQVNnRyxlQUFlLFVBQ25ERCxFQUFlTixVQUFVQyxJQUFJLFNBRTdCLE1BQU1PLEVBQXNCakcsU0FBU3dGLGNBQWMsTUFDbkRTLEVBQW9CM0MsWUFBWXRELFNBQVNnRyxlQUFlLGVBRXhELE1BQU1FLEVBQXNCbEcsU0FBU3dGLGNBQWMsTUFDbkRVLEVBQW9CNUMsWUFBWXRELFNBQVNnRyxlQUFlLGVBRXhELE1BQU1HLEVBQWVuRyxTQUFTd0YsY0FBYyxTQUU1Q3RCLFFBQVFaLFlBQVlpQyxHQUNwQkEsRUFBV2pDLFlBQVlxQyxHQUN2QkEsRUFBU3JDLFlBQVlzQyxHQUVyQkMsRUFBYXZDLFlBQVl3QyxHQUN6QkQsRUFBYXZDLFlBQVl5QyxHQUN6QkYsRUFBYXZDLFlBQVkyQyxHQUN6QkosRUFBYXZDLFlBQVk0QyxHQUV6Qk4sRUFBVXRDLFlBQVl1QyxHQUV0QkYsRUFBU3JDLFlBQVk2QyxHQUdyQmxCLEVBQUttQixRQUFRLFNBQVVyQixFQUFLbkUsR0FDeEIsTUFBTXlGLEVBQVNyRyxTQUFTd0YsY0FBYyxNQUVoQ2MsRUFBY3RHLFNBQVN3RixjQUFjLE1BQ3JDZSxFQUFVdkcsU0FBU3dGLGNBQWMsUUFDdkNlLEVBQVFkLFVBQVVDLElBQUksV0FBWSxJQUFNOUUsR0FDeEMwRixFQUFZaEQsWUFBWWlELEdBRXhCLE1BQU1DLEVBQVd4RyxTQUFTd0YsY0FBYyxNQUN4Q2dCLEVBQVNsRCxZQUFZdEQsU0FBU2dHLGVBQWVqQixFQUFJMEIsUUFFakQsTUFBTUMsRUFBVzFHLFNBQVN3RixjQUFjLE1BQ3hDa0IsRUFBU3BELFlBQVl0RCxTQUFTZ0csZUFBZVcsS0FBS0MsTUFBTTdCLEVBQUk4QixPQUFPQyxtQkFFbkUsTUFBTUMsRUFBZ0IvRyxTQUFTd0YsY0FBYyxNQUN6Q1QsRUFBSWlDLFdBQWEsR0FDakJELEVBQWN6RCxZQUFZdEQsU0FBU2dHLGVBQWUsSUFBTVcsS0FBS0MsTUFBTTdCLEVBQUlpQyxZQUFZRixtQkFDbkZDLEVBQWN0QixVQUFVQyxJQUFJLFlBQWEsYUFFekNxQixFQUFjekQsWUFBWXRELFNBQVNnRyxlQUFlLE1BR3RESyxFQUFPL0MsWUFBWWdELEdBQ25CRCxFQUFPL0MsWUFBWWtELEdBQ25CSCxFQUFPL0MsWUFBWW9ELEdBQ25CTCxFQUFPL0MsWUFBWXlELEdBQ25CWixFQUFhN0MsWUFBWStDLEtBSWpDLFNBQVNqQixZQUFZRixHQUVqQixNQUFNK0IsRUFBZWpILFNBQVN3RixjQUFjLFdBQzVDeUIsRUFBYXhCLFVBQVVDLElBQUksVUFFM0IsTUFBTXdCLEVBQVlsSCxTQUFTd0YsY0FBYyxNQUN6QzBCLEVBQVV6QixVQUFVQyxJQUFJLFVBRXhCeEIsUUFBUVosWUFBWTJELEdBQ3BCQSxFQUFhM0QsWUFBWTRELEdBRXpCaEMsRUFBT2tCLFFBQVEsU0FBVWUsRUFBT3ZHLEdBRTVCLE1BQU13RyxFQUFZcEgsU0FBU3dGLGNBQWMsTUFDekM0QixFQUFVM0IsVUFBVUMsSUFBSSxjQUV4QixNQUFNMkIsRUFBY3JILFNBQVN3RixjQUFjLE9BQzNDNkIsRUFBWTVCLFVBQVVDLElBQUksZ0JBRTFCLE1BQU00QixFQUFhdEgsU0FBU3dGLGNBQWMsTUFDMUM4QixFQUFXaEUsWUFBWXRELFNBQVNnRyxlQUFlbUIsRUFBTUksUUFDckRELEVBQVc3QixVQUFVQyxJQUFJLGVBRXpCLE1BQU04QixFQUFpQnhILFNBQVN3RixjQUFjLFFBQzlDZ0MsRUFBZWxFLFlBQVl0RCxTQUFTZ0csZUFBZXlCLE1BQU1DLEtBQUtQLEVBQU1RLFdBQVdDLE9BQU8sd0JBQ3RGSixFQUFlL0IsVUFBVUMsSUFBSSxtQkFFN0IsTUFBTW1DLEVBQWU3SCxTQUFTd0YsY0FBYyxLQUM1Q3FDLEVBQWF2RSxZQUFZdEQsU0FBU2dHLGVBQWVtQixFQUFNVyxVQUN2REQsRUFBYXBDLFVBQVVDLElBQUksaUJBRTNCMEIsRUFBVTlELFlBQVkrRCxHQUN0QkEsRUFBWS9ELFlBQVlnRSxHQUN4QkQsRUFBWS9ELFlBQVlrRSxHQUN4QkosRUFBVTlELFlBQVl1RSxHQUV0QlgsRUFBVTVELFlBQVk4RCxLQUk5QixTQUFTOUIscUJBRUwsTUFBTUQsRUFBZXJGLFNBQVN3RixjQUFjLE9BQzVDSCxFQUFhSSxVQUFVQyxJQUFJLE9BQVEsZUFBZ0IsT0FFbkQsTUFBTXFDLEVBQW9CL0gsU0FBU3dGLGNBQWMsTUFDakR1QyxFQUFrQnpFLFlBQVl0RCxTQUFTZ0csZUFBZSxrQ0FFdEQsTUFBTWdDLEVBQW1CaEksU0FBU3dGLGNBQWMsS0FLaEQsT0FKQXdDLEVBQWlCMUUsWUFBWXRELFNBQVNnRyxlQUFlLDJEQUVyRFgsRUFBYS9CLFlBQVl5RSxHQUN6QjFDLEVBQWEvQixZQUFZMEUsR0FDbEIzQyxFQUtYLE1BQU00QyxLQUFPakksU0FBU21FLGNBQWMsUUFDcEMsSUFBSStELFlBQWNELEtBQUt4QyxVQUFVMEMsU0FBUyxnQkFDMUMsTUFBTUMsZ0JBQWtCcEksU0FBU21FLGNBQWMsc0JBRS9DLFNBQVNrRSx1QkFBdUI5SCxHQUM1QkEsRUFBRStILGlCQUlGSixjQURBQSxZQUFjRCxLQUFLeEMsVUFBVTBDLFNBQVMsaUJBSXRDRixLQUFLeEMsVUFBVThDLE9BQU8sZ0JBR3RCQyxhQUFhQyxRQUFRLFlBQWFDLEtBQUtDLFVBQVVULGNBT3JELFNBQVNVLDRCQUNxQyxTQUF0Q0osYUFBYUssUUFBUSxjQUNyQlosS0FBS3hDLFVBQVU4QyxPQUFPLGdCQVM5QixJQUFJTyxTQUFVQyxPQUxVLE9BQXBCWCxpQkFDQUEsZ0JBQWdCbkcsaUJBQWlCLFFBQVNvRyx3QkFLOUMsSUFBSVcsU0FBVSxFQUdkLE1BQU1DLFlBQWNqSixTQUFTa0osaUJBQWlCLFFBc0I5QyxTQUFTQyxpQkFBaUI1SSxHQUN0QnVJLFNBQVd2SSxFQUFFNkksT0FBTzVFLFFBQVE1RCxNQUViWixTQUFTa0osaUJBQWlCLFVBQ2xDOUMsUUFBUSxTQUFVaUQsRUFBUXpJLEdBQzdCeUksRUFBTzVELFVBQVU4QyxPQUFPLFdBRVh2SSxTQUFTa0osaUJBQWlCLFdBQ2xDOUMsUUFBUSxTQUFVaUQsRUFBUXpJLEdBQy9CeUksRUFBTzVELFVBQVU4QyxPQUFPLFlBRTVCaEksRUFBRTZJLE9BQU8zRCxVQUFVOEMsT0FBTyxTQUMxQlMsU0FBVSxFQUdkLFNBQVNNLGVBQWUvSSxHQUNwQkEsRUFBRStILGlCQUNGUyxPQUFTeEksRUFBRTZJLE9BQU81RSxRQUFRNUQsTUFDMUJvSSxTQUFVLEVBQ05GLFNBQVdDLE9BQ1hRLEtBQUtSLE9BQVFELFVBRWJTLEtBQUtULFNBQVVDLFFBSXZCLFNBQVNTLGlCQUFpQmpKLEdBQ2xCeUksU0FDQUMsWUFBWTdDLFFBQVEsU0FBVWlELEVBQVF6SSxHQUVsQ3lJLEVBQU81RCxVQUFVZ0UsT0FBTyxVQUVwQkMsU0FBU1osVUFBWVksU0FBU25KLEVBQUU2SSxPQUFPNUUsUUFBUTVELE9BQzNDOEksU0FBU0wsRUFBTzdFLFFBQVE1RCxRQUFVOEksU0FBU1osV0FBYVksU0FBU0wsRUFBTzdFLFFBQVE1RCxRQUFVOEksU0FBU25KLEVBQUU2SSxPQUFPNUUsUUFBUTVELFFBQ3BIeUksRUFBTzVELFVBQVVDLElBQUksVUFJckJnRSxTQUFTTCxFQUFPN0UsUUFBUTVELFFBQVU4SSxTQUFTWixXQUFhWSxTQUFTTCxFQUFPN0UsUUFBUTVELFFBQVU4SSxTQUFTbkosRUFBRTZJLE9BQU81RSxRQUFRNUQsUUFDcEh5SSxFQUFPNUQsVUFBVUMsSUFBSSxZQU96QyxTQUFTVix5QkFDTCxNQUFNMkUsRUFBVTNKLFNBQVNtRSxjQUFjLFlBQ3ZCLE9BQVp3RixHQUNBQSxFQUFRRixTQUloQixTQUFTRyw4QkFDTCxNQUFNdkUsRUFBZXJGLFNBQVNtRSxjQUFjLGlCQUN2QixPQUFqQmtCLEdBQ0FBLEVBQWFvRSxTQUlyQixTQUFTRixLQUFLVCxFQUFVQyxHQUdwQixNQUFNbEUsRUFBTyxDQUNUVCxPQUFRQSxPQUNSQyxLQUFNQSxLQUNOeUUsU0FBVUEsRUFDVkMsT0FBUUEsR0FJWjdFLFFBQVEyRixVQUFZLEdBQ3BCRCw4QkFDQTVFLHlCQUdBLE1BQU04RSxFQUFhOUosU0FBU3dGLGNBQWMsUUFDMUNzRSxFQUFXckUsVUFBVUMsSUFBSSxXQUN6QnhCLFFBQVFaLFlBQVl3RyxHQUdwQixNQUFNQyxFQUFNLElBQUlDLGVBQ2hCRCxFQUFJRSxLQUFLLE9BQVEsZ0JBQWdCLEdBQ2pDRixFQUFJRyxpQkFBaUIsZUFBZ0IsbUNBQ3JDSCxFQUFJSSxLQUFLekIsS0FBS0MsVUFBVTlELElBQ3hCa0YsRUFBSUssbUJBQXFCLFdBQ0UsSUFBbkJMLEVBQUlNLFlBQW1DLE1BQWZOLEVBQUlPLFNBQzVCMUYsY0FBYzhELEtBQUs2QixNQUFNUixFQUFJUyxlQUM3QkMscUJBS1osU0FBU0EsbUJBRUwsTUFBTUMsRUFBZTFLLFNBQVNtRSxjQUFjLGdCQUN2QixPQUFqQnVHLEdBQ0EsSUFBSWhILFVBQVVnSCxFQUFjLENBQ3hCL0gsWUFBWSxJQXJIcEJzRyxZQUFZekgsT0FBUyxHQUVyQnlILFlBQVk3QyxRQUFRLFNBQVVpRCxFQUFRekksR0FFbEMsQ0FBQyxZQUFhLGNBQWN3RixRQUFRLFNBQVU3RixHQUMxQzhJLEVBQU9wSCxpQkFBaUIxQixFQUFHNEksb0JBRy9CLENBQUMsVUFBVyxZQUFZL0MsUUFBUSxTQUFVN0YsR0FDdEM4SSxFQUFPcEgsaUJBQWlCMUIsRUFBRytJLGtCQUcvQixDQUFDLGFBQWMsY0FBY2xELFFBQVEsU0FBVTdGLEdBQzNDOEksRUFBT3BILGlCQUFpQjFCLEVBQUdpSixzQkFxSHZDbEYsWUFDQUksVUFDQWtFLDRCQUNBNkIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIHRhYmxlc29ydCB2NS4wLjIgKDIwMTctMTEtMTIpXG4gKiBodHRwOi8vdHJpc3Rlbi5jYS90YWJsZXNvcnQvZGVtby9cbiAqIENvcHlyaWdodCAoYykgMjAxNyA7IExpY2Vuc2VkIE1JVFxuKi8hZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGIsYyl7aWYoISh0aGlzIGluc3RhbmNlb2YgYSkpcmV0dXJuIG5ldyBhKGIsYyk7aWYoIWJ8fFwiVEFCTEVcIiE9PWIudGFnTmFtZSl0aHJvdyBuZXcgRXJyb3IoXCJFbGVtZW50IG11c3QgYmUgYSB0YWJsZVwiKTt0aGlzLmluaXQoYixjfHx7fSl9dmFyIGI9W10sYz1mdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gd2luZG93LkN1c3RvbUV2ZW50JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB3aW5kb3cuQ3VzdG9tRXZlbnQ/Yj1uZXcgQ3VzdG9tRXZlbnQoYSk6KGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJDdXN0b21FdmVudFwiKSxiLmluaXRDdXN0b21FdmVudChhLCExLCExLHZvaWQgMCkpLGJ9LGQ9ZnVuY3Rpb24oYSl7cmV0dXJuIGEuZ2V0QXR0cmlidXRlKFwiZGF0YS1zb3J0XCIpfHxhLnRleHRDb250ZW50fHxhLmlubmVyVGV4dHx8XCJcIn0sZT1mdW5jdGlvbihhLGIpe3JldHVybiBhPWEudHJpbSgpLnRvTG93ZXJDYXNlKCksYj1iLnRyaW0oKS50b0xvd2VyQ2FzZSgpLGE9PT1iPzA6YTxiPzE6LTF9LGY9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZnVuY3Rpb24oYyxkKXt2YXIgZT1hKGMudGQsZC50ZCk7cmV0dXJuIDA9PT1lP2I/ZC5pbmRleC1jLmluZGV4OmMuaW5kZXgtZC5pbmRleDplfX07YS5leHRlbmQ9ZnVuY3Rpb24oYSxjLGQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIGN8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIGQpdGhyb3cgbmV3IEVycm9yKFwiUGF0dGVybiBhbmQgc29ydCBtdXN0IGJlIGEgZnVuY3Rpb25cIik7Yi5wdXNoKHtuYW1lOmEscGF0dGVybjpjLHNvcnQ6ZH0pfSxhLnByb3RvdHlwZT17aW5pdDpmdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc9dGhpcztpZihnLnRhYmxlPWEsZy50aGVhZD0hMSxnLm9wdGlvbnM9YixhLnJvd3MmJmEucm93cy5sZW5ndGg+MClpZihhLnRIZWFkJiZhLnRIZWFkLnJvd3MubGVuZ3RoPjApe2ZvcihlPTA7ZTxhLnRIZWFkLnJvd3MubGVuZ3RoO2UrKylpZihcInRoZWFkXCI9PT1hLnRIZWFkLnJvd3NbZV0uZ2V0QXR0cmlidXRlKFwiZGF0YS1zb3J0LW1ldGhvZFwiKSl7Yz1hLnRIZWFkLnJvd3NbZV07YnJlYWt9Y3x8KGM9YS50SGVhZC5yb3dzW2EudEhlYWQucm93cy5sZW5ndGgtMV0pLGcudGhlYWQ9ITB9ZWxzZSBjPWEucm93c1swXTtpZihjKXt2YXIgaD1mdW5jdGlvbigpe2cuY3VycmVudCYmZy5jdXJyZW50IT09dGhpcyYmZy5jdXJyZW50LnJlbW92ZUF0dHJpYnV0ZShcImFyaWEtc29ydFwiKSxnLmN1cnJlbnQ9dGhpcyxnLnNvcnRUYWJsZSh0aGlzKX07Zm9yKGU9MDtlPGMuY2VsbHMubGVuZ3RoO2UrKylmPWMuY2VsbHNbZV0sZi5zZXRBdHRyaWJ1dGUoXCJyb2xlXCIsXCJjb2x1bW5oZWFkZXJcIiksXCJub25lXCIhPT1mLmdldEF0dHJpYnV0ZShcImRhdGEtc29ydC1tZXRob2RcIikmJihmLnRhYmluZGV4PTAsZi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixoLCExKSxudWxsIT09Zi5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNvcnQtZGVmYXVsdFwiKSYmKGQ9ZikpO2QmJihnLmN1cnJlbnQ9ZCxnLnNvcnRUYWJsZShkKSl9fSxzb3J0VGFibGU6ZnVuY3Rpb24oYSxnKXt2YXIgaD10aGlzLGk9YS5jZWxsSW5kZXgsaj1lLGs9XCJcIixsPVtdLG09aC50aGVhZD8wOjEsbj1hLmdldEF0dHJpYnV0ZShcImRhdGEtc29ydC1tZXRob2RcIiksbz1hLmdldEF0dHJpYnV0ZShcImFyaWEtc29ydFwiKTtpZihoLnRhYmxlLmRpc3BhdGNoRXZlbnQoYyhcImJlZm9yZVNvcnRcIikpLGd8fChvPVwiYXNjZW5kaW5nXCI9PT1vP1wiZGVzY2VuZGluZ1wiOlwiZGVzY2VuZGluZ1wiPT09bz9cImFzY2VuZGluZ1wiOmgub3B0aW9ucy5kZXNjZW5kaW5nP1wiZGVzY2VuZGluZ1wiOlwiYXNjZW5kaW5nXCIsYS5zZXRBdHRyaWJ1dGUoXCJhcmlhLXNvcnRcIixvKSksIShoLnRhYmxlLnJvd3MubGVuZ3RoPDIpKXtpZighbil7Zm9yKDtsLmxlbmd0aDwzJiZtPGgudGFibGUudEJvZGllc1swXS5yb3dzLmxlbmd0aDspaz1kKGgudGFibGUudEJvZGllc1swXS5yb3dzW21dLmNlbGxzW2ldKSxrPWsudHJpbSgpLGsubGVuZ3RoPjAmJmwucHVzaChrKSxtKys7aWYoIWwpcmV0dXJufWZvcihtPTA7bTxiLmxlbmd0aDttKyspaWYoaz1iW21dLG4pe2lmKGsubmFtZT09PW4pe2o9ay5zb3J0O2JyZWFrfX1lbHNlIGlmKGwuZXZlcnkoay5wYXR0ZXJuKSl7aj1rLnNvcnQ7YnJlYWt9Zm9yKGguY29sPWksbT0wO208aC50YWJsZS50Qm9kaWVzLmxlbmd0aDttKyspe3ZhciBwLHE9W10scj17fSxzPTAsdD0wO2lmKCEoaC50YWJsZS50Qm9kaWVzW21dLnJvd3MubGVuZ3RoPDIpKXtmb3IocD0wO3A8aC50YWJsZS50Qm9kaWVzW21dLnJvd3MubGVuZ3RoO3ArKylrPWgudGFibGUudEJvZGllc1ttXS5yb3dzW3BdLFwibm9uZVwiPT09ay5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNvcnQtbWV0aG9kXCIpP3Jbc109azpxLnB1c2goe3RyOmssdGQ6ZChrLmNlbGxzW2guY29sXSksaW5kZXg6c30pLHMrKztmb3IoXCJkZXNjZW5kaW5nXCI9PT1vP3Euc29ydChmKGosITApKToocS5zb3J0KGYoaiwhMSkpLHEucmV2ZXJzZSgpKSxwPTA7cDxzO3ArKylyW3BdPyhrPXJbcF0sdCsrKTprPXFbcC10XS50cixoLnRhYmxlLnRCb2RpZXNbbV0uYXBwZW5kQ2hpbGQoayl9fWgudGFibGUuZGlzcGF0Y2hFdmVudChjKFwiYWZ0ZXJTb3J0XCIpKX19LHJlZnJlc2g6ZnVuY3Rpb24oKXt2b2lkIDAhPT10aGlzLmN1cnJlbnQmJnRoaXMuc29ydFRhYmxlKHRoaXMuY3VycmVudCwhMCl9fSxcInVuZGVmaW5lZFwiIT10eXBlb2YgbW9kdWxlJiZtb2R1bGUuZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1hOndpbmRvdy5UYWJsZXNvcnQ9YX0oKTtcblxuKGZ1bmN0aW9uKCl7XG4gICAgdmFyIGNsZWFuTnVtYmVyID0gZnVuY3Rpb24oaSkge1xuICAgICAgICAgICAgcmV0dXJuIGkucmVwbGFjZSgvW15cXC0/MC05Ll0vZywgJycpO1xuICAgICAgICB9LFxuXG4gICAgICAgIGNvbXBhcmVOdW1iZXIgPSBmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgICAgICBhID0gcGFyc2VGbG9hdChhKTtcbiAgICAgICAgICAgIGIgPSBwYXJzZUZsb2F0KGIpO1xuXG4gICAgICAgICAgICBhID0gaXNOYU4oYSkgPyAwIDogYTtcbiAgICAgICAgICAgIGIgPSBpc05hTihiKSA/IDAgOiBiO1xuXG4gICAgICAgICAgICByZXR1cm4gYSAtIGI7XG4gICAgICAgIH07XG5cbiAgICBUYWJsZXNvcnQuZXh0ZW5kKCdudW1iZXInLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIHJldHVybiBpdGVtLm1hdGNoKC9eWy0rXT9bwqNcXHgyNMObwqLCtOKCrF0/XFxkK1xccyooWyxcXC5dXFxkezAsMn0pLykgfHwgLy8gUHJlZml4ZWQgY3VycmVuY3lcbiAgICAgICAgICAgIGl0ZW0ubWF0Y2goL15bLStdP1xcZCtcXHMqKFssXFwuXVxcZHswLDJ9KT9bwqNcXHgyNMObwqLCtOKCrF0vKSB8fCAvLyBTdWZmaXhlZCBjdXJyZW5jeVxuICAgICAgICAgICAgaXRlbS5tYXRjaCgvXlstK10/KFxcZCkqLT8oWyxcXC5dKXswLDF9LT8oXFxkKSsoW0UsZV1bXFwtK11bXFxkXSspPyU/JC8pOyAvLyBOdW1iZXJcbiAgICB9LCBmdW5jdGlvbihhLCBiKSB7XG4gICAgICAgIGEgPSBjbGVhbk51bWJlcihhKTtcbiAgICAgICAgYiA9IGNsZWFuTnVtYmVyKGIpO1xuXG4gICAgICAgIHJldHVybiBjb21wYXJlTnVtYmVyKGIsIGEpO1xuICAgIH0pO1xufSgpKTsiLCIvKlxuICogUnVuZWxvZ3Mgc2NyaXB0LmpzXG4gKlxuICogQ29udGVudDpcbiAqICAtIEdldCB1c2VySWQgYW5kIGN1cnJlbnQgeWVhciBmcm9tIHRoZSBhcHByb3ByaWF0ZSBoZWFkZXJzXG4gKiAgLSBHcmlkIHNxdWFyZSBjbGljayBldmVudCAtPiBYaFIgcmVxdWVzdCBuYWFyIEFQSSAtPiB1cGRhdGUgcHJvZmlsZVxuICogIC0gTmlnaHRtb2RlIHRvZ2dsZSAod29ya3Mgd2l0aCBsb2NhbFN0b3JhZ2UpXG4gKiAgLSBHcmlkIGRyYWcgLT4gc2VsZWN0IHNxdWFyZXNcbiAqICAtIFByaW50IGEgdGFibGUgd2l0aCByb3dzIGZvciBleHAgb3IgYW4gdW5vcmRlbmVkIGxvc3QgZm9yIGV2ZW50c1xuICpcbiAqL1xuXG5jb25zdCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGUnKTtcbmxldCB1c2VySWQgPSBudWxsO1xubGV0IHllYXIgPSBudWxsO1xuXG5mdW5jdGlvbiBnZXRVc2VySWQoKSB7XG4gICAgY29uc3QgdXNlckhlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jdXJyZW50IGgxJyk7XG4gICAgaWYgKHVzZXJIZWFkZXIgIT09IG51bGwpIHtcbiAgICAgICAgdXNlcklkID0gdXNlckhlYWRlci5kYXRhc2V0LmlkO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZ2V0WWVhcigpIHtcbiAgICBjb25zdCB5ZWFySGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnllYXJIZWFkZXInKTtcbiAgICBpZiAoeWVhckhlYWRlciAhPT0gbnVsbCkge1xuICAgICAgICB5ZWFyID0geWVhckhlYWRlci5kYXRhc2V0LnllYXI7XG4gICAgfVxufVxuXG5mdW5jdGlvbiB1cGRhdGVQcm9maWxlKGRhdGEpXG57XG4gICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgcmVtb3ZlU3Bpbm5lcklmUHJlc2VudCgpO1xuXG4gICAgaWYgKGRhdGEubG9ncyAgPT09IG51bGwgJiYgZGF0YS5ldmVudHMubGVuZ3RoICA9PT0gMCkge1xuICAgICAgICBjb25zdCBub3RpZmljYXRpb24gPSBjcmVhdGVOb3RpZmljYXRpb24oKTtcbiAgICAgICAgcHJvZmlsZS5hcHBlbmRDaGlsZChub3RpZmljYXRpb24pO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKGRhdGEubG9ncyAgIT09IG51bGwpIHtcbiAgICAgICAgcHJpbnRMb2dzKGRhdGEubG9ncyk7XG4gICAgfVxuXG4gICAgaWYgKGRhdGEuZXZlbnRzLmxlbmd0aCAgIT09IDApIHtcbiAgICAgICAgcHJpbnRFdmVudHMoZGF0YS5ldmVudHMpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gcHJpbnRMb2dzKGxvZ3MpXG57XG4gICAgLy8gUHJpbnQgdGhlIGV4cGVyaWVuY2UgdGFibGUgYW5kIGhlYWRlclxuICAgIGNvbnN0IGxvZ1NlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7XG4gICAgbG9nU2VjdGlvbi5jbGFzc0xpc3QuYWRkKCd0YWJsZScpO1xuXG4gICAgY29uc3QgbG9nVGFibGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0YWJsZScpO1xuICAgIGNvbnN0IGxvZ0hlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoZWFkJyk7XG5cbiAgICBjb25zdCBsb2dIZWFkZXJSb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0cicpO1xuXG4gICAgY29uc3QgbG9nSGVhZGVySWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgbG9nSGVhZGVySWNvbi5jbGFzc0xpc3QuYWRkKCdpY29uJyk7XG5cbiAgICBjb25zdCBsb2dIZWFkZXJMZXZlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgbG9nSGVhZGVyTGV2ZWwuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoJ0xldmVsJykpO1xuICAgIGxvZ0hlYWRlckxldmVsLmNsYXNzTGlzdC5hZGQoJ2xldmVsJyk7XG5cbiAgICBjb25zdCBsb2dIZWFkZXJFeHBlcmllbmNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGgnKTtcbiAgICBsb2dIZWFkZXJFeHBlcmllbmNlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCdFeHBlcmllbmNlJykpO1xuXG4gICAgY29uc3QgbG9nSGVhZGVyRGlmZmVyZW5jZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RoJyk7XG4gICAgbG9nSGVhZGVyRGlmZmVyZW5jZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnRGlmZmVyZW5jZScpKTtcblxuICAgIGNvbnN0IGxvZ1RhYmxlQm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3Rib2R5Jyk7XG5cbiAgICBwcm9maWxlLmFwcGVuZENoaWxkKGxvZ1NlY3Rpb24pO1xuICAgIGxvZ1NlY3Rpb24uYXBwZW5kQ2hpbGQobG9nVGFibGUpO1xuICAgIGxvZ1RhYmxlLmFwcGVuZENoaWxkKGxvZ0hlYWRlcik7XG5cbiAgICBsb2dIZWFkZXJSb3cuYXBwZW5kQ2hpbGQobG9nSGVhZGVySWNvbik7XG4gICAgbG9nSGVhZGVyUm93LmFwcGVuZENoaWxkKGxvZ0hlYWRlckxldmVsKTtcbiAgICBsb2dIZWFkZXJSb3cuYXBwZW5kQ2hpbGQobG9nSGVhZGVyRXhwZXJpZW5jZSk7XG4gICAgbG9nSGVhZGVyUm93LmFwcGVuZENoaWxkKGxvZ0hlYWRlckRpZmZlcmVuY2UpO1xuXG4gICAgbG9nSGVhZGVyLmFwcGVuZENoaWxkKGxvZ0hlYWRlclJvdyk7XG5cbiAgICBsb2dUYWJsZS5hcHBlbmRDaGlsZChsb2dUYWJsZUJvZHkpO1xuXG4gICAgLyogRGlzcGxheSB0aGUgZXhwZXJpZW5jZSB0YWJsZSByb3dzICovXG4gICAgbG9ncy5mb3JFYWNoKGZ1bmN0aW9uIChsb2csIGluZGV4KSB7XG4gICAgICAgIGNvbnN0IGxvZ1JvdyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RyJyk7XG5cbiAgICAgICAgY29uc3QgbG9nSWNvbkNlbGwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCd0ZCcpO1xuICAgICAgICBjb25zdCBsb2dJY29uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgICAgICBsb2dJY29uLmNsYXNzTGlzdC5hZGQoJ2xvZy1pY29uJywgJ3MnICsgaW5kZXgpO1xuICAgICAgICBsb2dJY29uQ2VsbC5hcHBlbmRDaGlsZChsb2dJY29uKTtcblxuICAgICAgICBjb25zdCBsb2dMZXZlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XG4gICAgICAgIGxvZ0xldmVsLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGxvZy5sZXZlbCkpO1xuXG4gICAgICAgIGNvbnN0IGxvZ1ZhbHVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICAgICAgbG9nVmFsdWUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoTWF0aC5yb3VuZChsb2cudmFsdWUpLnRvTG9jYWxlU3RyaW5nKCkpKTtcblxuICAgICAgICBjb25zdCBsb2dEaWZmZXJlbmNlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndGQnKTtcbiAgICAgICAgaWYgKGxvZy5kaWZmZXJlbmNlID4gMCkge1xuICAgICAgICAgICAgbG9nRGlmZmVyZW5jZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnKycgKyBNYXRoLnJvdW5kKGxvZy5kaWZmZXJlbmNlKS50b0xvY2FsZVN0cmluZygpKSk7XG4gICAgICAgICAgICBsb2dEaWZmZXJlbmNlLmNsYXNzTGlzdC5hZGQoJ2xvZy12YWx1ZScsICdwb3NpdGl2ZScpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbG9nRGlmZmVyZW5jZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnMCcpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxvZ1Jvdy5hcHBlbmRDaGlsZChsb2dJY29uQ2VsbCk7XG4gICAgICAgIGxvZ1Jvdy5hcHBlbmRDaGlsZChsb2dMZXZlbCk7XG4gICAgICAgIGxvZ1Jvdy5hcHBlbmRDaGlsZChsb2dWYWx1ZSk7XG4gICAgICAgIGxvZ1Jvdy5hcHBlbmRDaGlsZChsb2dEaWZmZXJlbmNlKTtcbiAgICAgICAgbG9nVGFibGVCb2R5LmFwcGVuZENoaWxkKGxvZ1Jvdyk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIHByaW50RXZlbnRzKGV2ZW50cylcbntcbiAgICBjb25zdCBldmVudFNlY3Rpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzZWN0aW9uJyk7XG4gICAgZXZlbnRTZWN0aW9uLmNsYXNzTGlzdC5hZGQoJ2V2ZW50cycpO1xuXG4gICAgY29uc3QgZXZlbnRMaXN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndWwnKTtcbiAgICBldmVudExpc3QuY2xhc3NMaXN0LmFkZCgnZXZlbnRzJyk7XG5cbiAgICBwcm9maWxlLmFwcGVuZENoaWxkKGV2ZW50U2VjdGlvbik7XG4gICAgZXZlbnRTZWN0aW9uLmFwcGVuZENoaWxkKGV2ZW50TGlzdCk7XG5cbiAgICBldmVudHMuZm9yRWFjaChmdW5jdGlvbiAoZXZlbnQsIGluZGV4KSB7XG5cbiAgICAgICAgY29uc3QgZXZlbnRJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgZXZlbnRJdGVtLmNsYXNzTGlzdC5hZGQoJ2V2ZW50LWl0ZW0nKTtcblxuICAgICAgICBjb25zdCBldmVudEhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICBldmVudEhlYWRlci5jbGFzc0xpc3QuYWRkKCdldmVudC1oZWFkZXInKTtcblxuICAgICAgICBjb25zdCBldmVudFRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICAgICAgZXZlbnRUaXRsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShldmVudC50aXRsZSkpO1xuICAgICAgICBldmVudFRpdGxlLmNsYXNzTGlzdC5hZGQoJ2V2ZW50LXRpdGxlJyk7XG5cbiAgICAgICAgY29uc3QgZXZlbnRUaW1lc3RhbXAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgICAgIGV2ZW50VGltZXN0YW1wLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGRheWpzLnVuaXgoZXZlbnQudGltZXN0YW1wKS5mb3JtYXQoXCJNTU1NIEQsIFlZWVkgSEg6bW1cIikpKTtcbiAgICAgICAgZXZlbnRUaW1lc3RhbXAuY2xhc3NMaXN0LmFkZCgnZXZlbnQtdGltZXN0YW1wJyk7XG5cbiAgICAgICAgY29uc3QgZXZlbnREZXRhaWxzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICAgICAgICBldmVudERldGFpbHMuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoZXZlbnQuZGV0YWlscykpO1xuICAgICAgICBldmVudERldGFpbHMuY2xhc3NMaXN0LmFkZCgnZXZlbnQtZGV0YWlscycpO1xuXG4gICAgICAgIGV2ZW50SXRlbS5hcHBlbmRDaGlsZChldmVudEhlYWRlcik7XG4gICAgICAgIGV2ZW50SGVhZGVyLmFwcGVuZENoaWxkKGV2ZW50VGl0bGUpO1xuICAgICAgICBldmVudEhlYWRlci5hcHBlbmRDaGlsZChldmVudFRpbWVzdGFtcCk7XG4gICAgICAgIGV2ZW50SXRlbS5hcHBlbmRDaGlsZChldmVudERldGFpbHMpO1xuXG4gICAgICAgIGV2ZW50TGlzdC5hcHBlbmRDaGlsZChldmVudEl0ZW0pO1xuICAgIH0pO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVOb3RpZmljYXRpb24oKVxue1xuICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIG5vdGlmaWNhdGlvbi5jbGFzc0xpc3QuYWRkKCd0ZXh0JywgJ25vdGlmaWNhdGlvbicsICdpbmYnKTtcblxuICAgIGNvbnN0IG5vdGlmaWNhdGlvblRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaDInKTtcbiAgICBub3RpZmljYXRpb25UaXRsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIk5vdGhpbmcgaW50ZXJlc3RpbmcgaGFwcGVuZWQuXCIpKTtcblxuICAgIGNvbnN0IG5vdGlmaWNhdGlvblRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdwJyk7XG4gICAgbm90aWZpY2F0aW9uVGV4dC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIkxvb2tzIGxpa2Ugd2UgZG9uJ3QgaGF2ZSBhbnkgZGF0YSBmb3IgeW91IG9uIHRoaXMgZGF5LlwiKSk7XG5cbiAgICBub3RpZmljYXRpb24uYXBwZW5kQ2hpbGQobm90aWZpY2F0aW9uVGl0bGUpO1xuICAgIG5vdGlmaWNhdGlvbi5hcHBlbmRDaGlsZChub3RpZmljYXRpb25UZXh0KTtcbiAgICByZXR1cm4gbm90aWZpY2F0aW9uO1xufVxuXG4vKiBOaWdodG1vZGUgdG9nZ2xlIChnbG9iYWwpICovXG5cbmNvbnN0IGJvZHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdib2R5Jyk7XG5sZXQgaXNOaWdodG1vZGUgPSBib2R5LmNsYXNzTGlzdC5jb250YWlucygnaXMtbmlnaHRtb2RlJyk7XG5jb25zdCBuaWdodG1vZGVUb2dnbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmlnaHQtbW9kZS10b2dnbGUnKTtcblxuZnVuY3Rpb24gdG9nZ2xlTmlnaHRtb2RlT25DbGljayhlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgLy8gR2V0IHRoZSBib2R5IGNsYXNzIGFuZCByZXZlcnNlIGl0XG4gICAgaXNOaWdodG1vZGUgPSBib2R5LmNsYXNzTGlzdC5jb250YWlucygnaXMtbmlnaHRtb2RlJyk7XG4gICAgaXNOaWdodG1vZGUgPSAhaXNOaWdodG1vZGU7XG5cbiAgICAvLyBTZXQgdGhlIGJvZHkgY2xhc3Mgc28gdGhhdCB0aGUgc3R5bGluZyBjaGFuZ2VzXG4gICAgYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdpcy1uaWdodG1vZGUnKTtcblxuICAgIC8vIFN0b3JlIHRoZSBib29sIGluIGxvY2FsU3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwibmlnaHRtb2RlXCIsIEpTT04uc3RyaW5naWZ5KGlzTmlnaHRtb2RlKSk7XG59XG5cbi8qXG4gKiBJZiBhIHBhZ2UgaXMgbG9hZGVkIGFuZCB0aGUgbG9jYWxTdG9yYWdlIHBhcmFtZXRlciBpcyBzZXQgdG9cbiAqIHRydWUsIHRoZW4gc3dpdGNoIHRoZSBwYWdlIHN0eWxpbmdcbiAqL1xuZnVuY3Rpb24gdHVybk9uTmlnaHRtb2RlT25QYWdlTG9hZCgpIHtcbiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJuaWdodG1vZGVcIikgPT09IFwidHJ1ZVwiKSB7XG4gICAgICAgIGJvZHkuY2xhc3NMaXN0LnRvZ2dsZSgnaXMtbmlnaHRtb2RlJyk7XG4gICAgfVxufVxuXG5pZiAobmlnaHRtb2RlVG9nZ2xlICE9PSBudWxsKSB7XG4gICAgbmlnaHRtb2RlVG9nZ2xlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdG9nZ2xlTmlnaHRtb2RlT25DbGljayk7XG59XG5cbi8qIERhdGUgY2xpY2tlciAqL1xubGV0IHN0YXJ0RGF5LCBlbmREYXk7XG5sZXQgZHJhZ2dlZCA9IGZhbHNlO1xuXG4vKiBTVkcgR3JpZCBldmVudHMgKi9cbmNvbnN0IGdyaWRTcXVhcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRheScpO1xuXG4vLyBxdWVyeVNlbGVjdG9yQWxsIHJldHVybnMgYSBOb2RlbGlzdCBzbyBoYXZlIHRvIGNoZWNrIGZvciBsZW5ndGhcbmlmIChncmlkU3F1YXJlcy5sZW5ndGggPiAwKSB7XG5cbiAgICBncmlkU3F1YXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChzcXVhcmUsIGluZGV4KSB7XG5cbiAgICAgICAgWydtb3VzZWRvd24nLCAndG91Y2hzdGFydCddLmZvckVhY2goZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIHNxdWFyZS5hZGRFdmVudExpc3RlbmVyKGUsIGdyaWRTdGFydEhhbmRsZXIpO1xuICAgICAgICB9KTtcblxuICAgICAgICBbJ21vdXNldXAnLCAndG91Y2hlbmQnXS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7XG4gICAgICAgICAgICBzcXVhcmUuYWRkRXZlbnRMaXN0ZW5lcihlLCBncmlkRW5kSGFuZGxlcik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIFsnbW91c2VlbnRlcicsICd0b3VjaGVudGVyJ10uZm9yRWFjaChmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoZSwgZ3JpZEhvdmVySGFuZGxlcik7XG4gICAgICAgIH0pO1xuXG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdyaWRTdGFydEhhbmRsZXIoZSkge1xuICAgIHN0YXJ0RGF5ID0gZS50YXJnZXQuZGF0YXNldC5pbmRleDtcblxuICAgIGNvbnN0IGFjdGl2ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50b2RheScpO1xuICAgIGFjdGl2ZS5mb3JFYWNoKGZ1bmN0aW9uIChzcXVhcmUsIGluZGV4KSB7XG4gICAgICAgIHNxdWFyZS5jbGFzc0xpc3QudG9nZ2xlKCd0b2RheScpO1xuICAgIH0pXG4gICAgY29uc3Qgc2VsZWN0ZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VsZWN0Jyk7XG4gICAgc2VsZWN0ZWQuZm9yRWFjaChmdW5jdGlvbiAoc3F1YXJlLCBpbmRleCkge1xuICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LnRvZ2dsZSgnc2VsZWN0Jyk7XG4gICAgfSlcbiAgICBlLnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKCd0b2RheScpO1xuICAgIGRyYWdnZWQgPSB0cnVlO1xufVxuXG5mdW5jdGlvbiBncmlkRW5kSGFuZGxlcihlKSB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGVuZERheSA9IGUudGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG4gICAgZHJhZ2dlZCA9IGZhbHNlO1xuICAgIGlmIChzdGFydERheSA+IGVuZERheSkge1xuICAgICAgICBsb2FkKGVuZERheSwgc3RhcnREYXkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxvYWQoc3RhcnREYXksIGVuZERheSk7XG4gICAgfVxufVxuXG5mdW5jdGlvbiBncmlkSG92ZXJIYW5kbGVyKGUpIHtcbiAgICBpZiAoZHJhZ2dlZCkge1xuICAgICAgICBncmlkU3F1YXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChzcXVhcmUsIGluZGV4KSB7XG4gICAgICAgICAgICAvL3Jlc2V0XG4gICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0Jyk7XG4gICAgICAgICAgICAvL3JpZ2h0IGRyYWdcbiAgICAgICAgICAgIGlmIChwYXJzZUludChzdGFydERheSkgPiBwYXJzZUludChlLnRhcmdldC5kYXRhc2V0LmluZGV4KSkge1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChzcXVhcmUuZGF0YXNldC5pbmRleCkgPD0gcGFyc2VJbnQoc3RhcnREYXkpICYmIHBhcnNlSW50KHNxdWFyZS5kYXRhc2V0LmluZGV4KSA+PSBwYXJzZUludChlLnRhcmdldC5kYXRhc2V0LmluZGV4KSkge1xuICAgICAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZCgnc2VsZWN0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL2xlZnQgZHJhZ1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZUludChzcXVhcmUuZGF0YXNldC5pbmRleCkgPj0gcGFyc2VJbnQoc3RhcnREYXkpICYmIHBhcnNlSW50KHNxdWFyZS5kYXRhc2V0LmluZGV4KSA8PSBwYXJzZUludChlLnRhcmdldC5kYXRhc2V0LmluZGV4KSkge1xuICAgICAgICAgICAgICAgICAgICBzcXVhcmUuY2xhc3NMaXN0LmFkZCgnc2VsZWN0Jyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3Bpbm5lcklmUHJlc2VudCgpIHtcbiAgICBjb25zdCBzcGlubmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwaW5uZXInKTtcbiAgICBpZiAoc3Bpbm5lciAhPT0gbnVsbCkge1xuICAgICAgICBzcGlubmVyLnJlbW92ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlTm90aWZpY2F0aW9uSWZQcmVzZW50KCkge1xuICAgIGNvbnN0IG5vdGlmaWNhdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ub3RpZmljYXRpb24nKTtcbiAgICBpZiAobm90aWZpY2F0aW9uICE9PSBudWxsKSB7XG4gICAgICAgIG5vdGlmaWNhdGlvbi5yZW1vdmUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGxvYWQoc3RhcnREYXksIGVuZERheSkge1xuXG4gICAgLy8gIFByZXAgdGhlIGRhdGEgdGhhdCB0aGUgQVBJIG5lZWRzXG4gICAgY29uc3QgZGF0YSA9IHtcbiAgICAgICAgdXNlcklkOiB1c2VySWQsXG4gICAgICAgIHllYXI6IHllYXIsXG4gICAgICAgIHN0YXJ0RGF5OiBzdGFydERheSxcbiAgICAgICAgZW5kRGF5OiBlbmREYXlcbiAgICB9O1xuXG4gICAgLy8gIENsZWFuIHVwIHRoZSBwcm9maWxlIHNvIHdlIGNhbiByZS1pbnNlcnQgdGhlIG5ldyBkYXRhXG4gICAgcHJvZmlsZS5pbm5lckhUTUwgPSAnJztcbiAgICByZW1vdmVOb3RpZmljYXRpb25JZlByZXNlbnQoKTtcbiAgICByZW1vdmVTcGlubmVySWZQcmVzZW50KCk7XG5cbiAgICAvLyAgQWRkIHRoZSBsb2FkaW5nIHNwaW5uZXJcbiAgICBjb25zdCBuZXdTcGlubmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpO1xuICAgIG5ld1NwaW5uZXIuY2xhc3NMaXN0LmFkZCgnc3Bpbm5lcicpO1xuICAgIHByb2ZpbGUuYXBwZW5kQ2hpbGQobmV3U3Bpbm5lcik7XG5cbiAgICAvLyAgU3RhcnQgdGhlIHJlcXVlc3RcbiAgICBjb25zdCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcbiAgICB4aHIub3BlbignUE9TVCcsICcvYXBpL2dldERhdGEnLCB0cnVlKTtcbiAgICB4aHIuc2V0UmVxdWVzdEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnKTtcbiAgICB4aHIuc2VuZChKU09OLnN0cmluZ2lmeShkYXRhKSk7XG4gICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0ICYmIHhoci5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgICAgdXBkYXRlUHJvZmlsZShKU09OLnBhcnNlKHhoci5yZXNwb25zZVRleHQpKTtcbiAgICAgICAgICAgIHNvcnRQcm9maWxlVGFibGUoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuZnVuY3Rpb24gc29ydFByb2ZpbGVUYWJsZSgpXG57XG4gICAgY29uc3QgcHJvZmlsZVRhYmxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRhYmxlIHRhYmxlJyk7XG4gICAgaWYgKHByb2ZpbGVUYWJsZSAhPT0gbnVsbCkge1xuICAgICAgICBuZXcgVGFibGVzb3J0KHByb2ZpbGVUYWJsZSwge1xuICAgICAgICAgICAgZGVzY2VuZGluZzogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8qXG5sZXQgZ3JpZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5ncmlkLWNvbnRhaW5lcicpO1xuaWYoZ3JpZCl7XG4gIGxldCBtYXggPSBncmlkLnNjcm9sbFdpZHRoIC0gZ3JpZC5jbGllbnRXaWR0aDtcbiAgZ3JpZC5zY3JvbGxMZWZ0ID0gbWF4O1xufVxuKi9cblxuZ2V0VXNlcklkKCk7XG5nZXRZZWFyKCk7XG50dXJuT25OaWdodG1vZGVPblBhZ2VMb2FkKCk7XG5zb3J0UHJvZmlsZVRhYmxlKCk7Il19