!function(){function e(t,n){if(!(this instanceof e))return new e(t,n);if(!t||"TABLE"!==t.tagName)throw new Error("Element must be a table");this.init(t,n||{})}var t=[],n=function(e){var t;return window.CustomEvent&&"function"==typeof window.CustomEvent?t=new CustomEvent(e):(t=document.createEvent("CustomEvent")).initCustomEvent(e,!1,!1,void 0),t},o=function(e){return e.getAttribute("data-sort")||e.textContent||e.innerText||""},a=function(e,t){return(e=e.trim().toLowerCase())===(t=t.trim().toLowerCase())?0:e<t?1:-1},d=function(e,t){return function(n,o){var a=e(n.td,o.td);return 0===a?t?o.index-n.index:n.index-o.index:a}};e.extend=function(e,n,o){if("function"!=typeof n||"function"!=typeof o)throw new Error("Pattern and sort must be a function");t.push({name:e,pattern:n,sort:o})},e.prototype={init:function(e,t){var n,o,a,d,r=this;if(r.table=e,r.thead=!1,r.options=t,e.rows&&e.rows.length>0)if(e.tHead&&e.tHead.rows.length>0){for(a=0;a<e.tHead.rows.length;a++)if("thead"===e.tHead.rows[a].getAttribute("data-sort-method")){n=e.tHead.rows[a];break}n||(n=e.tHead.rows[e.tHead.rows.length-1]),r.thead=!0}else n=e.rows[0];if(n){var i=function(){r.current&&r.current!==this&&r.current.removeAttribute("aria-sort"),r.current=this,r.sortTable(this)};for(a=0;a<n.cells.length;a++)(d=n.cells[a]).setAttribute("role","columnheader"),"none"!==d.getAttribute("data-sort-method")&&(d.tabindex=0,d.addEventListener("click",i,!1),null!==d.getAttribute("data-sort-default")&&(o=d));o&&(r.current=o,r.sortTable(o))}},sortTable:function(e,r){var i=this,s=e.cellIndex,c=a,l="",u=[],p=i.thead?0:1,m=e.getAttribute("data-sort-method"),h=e.getAttribute("aria-sort");if(i.table.dispatchEvent(n("beforeSort")),r||(h="ascending"===h?"descending":"descending"===h?"ascending":i.options.descending?"descending":"ascending",e.setAttribute("aria-sort",h)),!(i.table.rows.length<2)){if(!m){for(;u.length<3&&p<i.table.tBodies[0].rows.length;)(l=(l=o(i.table.tBodies[0].rows[p].cells[s])).trim()).length>0&&u.push(l),p++;if(!u)return}for(p=0;p<t.length;p++)if(l=t[p],m){if(l.name===m){c=l.sort;break}}else if(u.every(l.pattern)){c=l.sort;break}for(i.col=s,p=0;p<i.table.tBodies.length;p++){var f,g=[],v={},y=0,E=0;if(!(i.table.tBodies[p].rows.length<2)){for(f=0;f<i.table.tBodies[p].rows.length;f++)"none"===(l=i.table.tBodies[p].rows[f]).getAttribute("data-sort-method")?v[y]=l:g.push({tr:l,td:o(l.cells[i.col]),index:y}),y++;for("descending"===h?g.sort(d(c,!0)):(g.sort(d(c,!1)),g.reverse()),f=0;f<y;f++)v[f]?(l=v[f],E++):l=g[f-E].tr,i.table.tBodies[p].appendChild(l)}}i.table.dispatchEvent(n("afterSort"))}},refresh:function(){void 0!==this.current&&this.sortTable(this.current,!0)}},"undefined"!=typeof module&&module.exports?module.exports=e:window.Tablesort=e}(),function(){var e=function(e){return e.replace(/[^\-?0-9.]/g,"")};Tablesort.extend("number",function(e){return e.match(/^[-+]?[£\x24Û¢´€]?\d+\s*([,\.]\d{0,2})/)||e.match(/^[-+]?\d+\s*([,\.]\d{0,2})?[£\x24Û¢´€]/)||e.match(/^[-+]?(\d)*-?([,\.]){0,1}-?(\d)+([E,e][\-+][\d]+)?%?$/)},function(t,n){return t=e(t),function(e,t){return e=parseFloat(e),t=parseFloat(t),(e=isNaN(e)?0:e)-(t=isNaN(t)?0:t)}(n=e(n),t)})}();const profile=document.querySelector(".profile");let userId=null,year=null;function getUserId(){const e=document.querySelector(".current h1");null!==e&&(userId=e.dataset.id)}function getYear(){const e=document.querySelector(".yearHeader");null!==e&&(year=e.dataset.year)}function updateProfile(e){if(console.table(e),removeSpinnerIfPresent(),null!==e.logs||0!==e.events.length)null!==e.logs&&printLogs(e.logs),0!==e.events.length&&printEvents(e.events);else{const e=createNotification();profile.appendChild(e)}}function printLogs(e){const t=document.createElement("section");t.classList.add("table");const n=document.createElement("table"),o=document.createElement("thead"),a=document.createElement("tr"),d=document.createElement("th");d.classList.add("icon");const r=document.createElement("th");r.appendChild(document.createTextNode("Level")),r.classList.add("level");const i=document.createElement("th");i.appendChild(document.createTextNode("Experience"));const s=document.createElement("th");s.appendChild(document.createTextNode("Difference"));const c=document.createElement("tbody");profile.appendChild(t),t.appendChild(n),n.appendChild(o),a.appendChild(d),a.appendChild(r),a.appendChild(i),a.appendChild(s),o.appendChild(a),n.appendChild(c),e.forEach(function(e,t){const n=document.createElement("tr"),o=document.createElement("td"),a=document.createElement("span");a.classList.add("log-icon","s"+t),o.appendChild(a);const d=document.createElement("td");d.appendChild(document.createTextNode(e.level));const r=document.createElement("td");r.appendChild(document.createTextNode(Math.round(e.value).toLocaleString()));const i=document.createElement("td");e.difference>0?(i.appendChild(document.createTextNode("+"+Math.round(e.difference).toLocaleString())),i.classList.add("log-value","positive")):i.appendChild(document.createTextNode("0")),n.appendChild(o),n.appendChild(d),n.appendChild(r),n.appendChild(i),c.appendChild(n)})}function printEvents(e){const t=document.createElement("section");t.classList.add("events");const n=document.createElement("ul");n.classList.add("events"),profile.appendChild(t),t.appendChild(n),e.forEach(function(e,t){const o=document.createElement("li");o.classList.add("event-item");const a=document.createElement("div");a.classList.add("event-header");const d=document.createElement("h2");d.appendChild(document.createTextNode(e.title)),d.classList.add("event-title");const r=document.createElement("span");r.appendChild(document.createTextNode(dayjs.unix(e.timestamp).format("MMMM D, YYYY HH:mm"))),r.classList.add("event-timestamp");const i=document.createElement("p");i.appendChild(document.createTextNode(e.details)),i.classList.add("event-details"),o.appendChild(a),a.appendChild(d),a.appendChild(r),o.appendChild(i),n.appendChild(o)})}function createNotification(){const e=document.createElement("div");e.classList.add("text","notification","inf");const t=document.createElement("h2");t.appendChild(document.createTextNode("Nothing interesting happened."));const n=document.createElement("p");return n.appendChild(document.createTextNode("Looks like we don't have any data for you on this day.")),e.appendChild(t),e.appendChild(n),e}const body=document.querySelector("body");let isNightmode=body.classList.contains("is-nightmode");const nightmodeToggle=document.querySelector(".night-mode-toggle");function toggleNightmodeOnClick(e){e.preventDefault(),isNightmode=!(isNightmode=body.classList.contains("is-nightmode")),body.classList.toggle("is-nightmode"),localStorage.setItem("nightmode",JSON.stringify(isNightmode))}function turnOnNightmodeOnPageLoad(){"true"===localStorage.getItem("nightmode")&&body.classList.toggle("is-nightmode")}let startDay,endDay;null!==nightmodeToggle&&nightmodeToggle.addEventListener("click",toggleNightmodeOnClick);let dragged=!1;const gridSquares=document.querySelectorAll(".day");function gridStartHandler(e){startDay=e.target.dataset.index,document.querySelectorAll(".today").forEach(function(e,t){e.classList.toggle("today")}),document.querySelectorAll(".select").forEach(function(e,t){e.classList.toggle("select")}),e.target.classList.toggle("today"),dragged=!0}function gridEndHandler(e){e.preventDefault(),endDay=e.target.dataset.index,dragged=!1,startDay>endDay?load(endDay,startDay):load(startDay,endDay)}function gridHoverHandler(e){dragged&&gridSquares.forEach(function(t,n){t.classList.remove("select"),parseInt(startDay)>parseInt(e.target.dataset.index)?parseInt(t.dataset.index)<=parseInt(startDay)&&parseInt(t.dataset.index)>=parseInt(e.target.dataset.index)&&t.classList.add("select"):parseInt(t.dataset.index)>=parseInt(startDay)&&parseInt(t.dataset.index)<=parseInt(e.target.dataset.index)&&t.classList.add("select")})}function removeSpinnerIfPresent(){const e=document.querySelector(".spinner");null!==e&&e.remove()}function removeNotificationIfPresent(){const e=document.querySelector(".notification");null!==e&&e.remove()}function load(e,t){const n={userId:userId,year:year,startDay:e,endDay:t};profile.innerHTML="",removeNotificationIfPresent(),removeSpinnerIfPresent();const o=document.createElement("span");o.classList.add("spinner"),profile.appendChild(o);const a=new XMLHttpRequest;a.open("POST","/api/getData",!0),a.setRequestHeader("Content-Type","application/json; charset=UTF-8"),a.send(JSON.stringify(n)),a.onreadystatechange=function(){4===a.readyState&&200===a.status&&(updateProfile(JSON.parse(a.responseText)),sortProfileTable())}}function sortProfileTable(){const e=document.querySelector(".table table");null!==e&&new Tablesort(e,{descending:!0})}gridSquares.length>0&&gridSquares.forEach(function(e,t){["mousedown","touchstart"].forEach(function(t){e.addEventListener(t,gridStartHandler)}),["mouseup","touchend"].forEach(function(t){e.addEventListener(t,gridEndHandler)}),["mouseenter","touchenter"].forEach(function(t){e.addEventListener(t,gridHoverHandler)})}),getUserId(),getYear(),turnOnNightmodeOnPageLoad(),sortProfileTable();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,